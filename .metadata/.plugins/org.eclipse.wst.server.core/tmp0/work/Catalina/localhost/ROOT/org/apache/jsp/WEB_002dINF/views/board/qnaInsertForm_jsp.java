/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2022-01-01 07:58:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class qnaInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

		String mem_id = (String) session.getAttribute("mem_id");
	
      out.write('\r');
      out.write('\n');
      out.write('	');

		String checkLogin = (String) session.getAttribute("checkLogin");
	
      out.write("\r\n");
      out.write("	session\r\n");
      out.write("	");
      out.print(checkLogin);
      out.write("<br>\r\n");
      out.write("	");

		if (checkLogin == "success") {
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<form action=\"qnaInsert.board\" method=\"post\" name=\"frm\">\r\n");
      out.write("		글제목<input type=\"text\" name=\"board_sub\"><br> 작성자");
      out.print(mem_id);
      out.write("<br>\r\n");
      out.write("		글 내용<br>\r\n");
      out.write("		<textarea rows=\"5\" cols=\"50\" style=\"resize: none;\" name=\"board_content\"></textarea>\r\n");
      out.write("		<br>\r\n");
      out.write("		<input type=\"hidden\" name=\"board_board\" value=\"qna\">\r\n");
      out.write("		<input type=\"hidden\" name=\"mem_id\" value=\"");
      out.print(mem_id);
      out.write("\">\r\n");
      out.write("		<input type=\"button\" value=\"작성\" onclick=\"checkSubmit()\"><br>\r\n");
      out.write("		<input type=\"button\" value=\"게시글 리스트로 이동\" onclick=\"location.href='boardList.ad'\">\r\n");
      out.write("	</form>\r\n");
      out.write("	");

		} else {
	
      out.write("\r\n");
      out.write("	<a href=\"/login\">로그인 페이지로 이동 </a>\r\n");
      out.write("	");

		}
	
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	function checkSubmit() {\r\n");
      out.write("        var board_sub = document.getElementsByName('board_sub')[0].value;\r\n");
      out.write("        var board_content = document.getElementsByName('board_content')[0].value;\r\n");
      out.write("        if(!board_sub){\r\n");
      out.write("        	alert(\"제목을 입력하세요\");\r\n");
      out.write("        	board_sub.focus();\r\n");
      out.write("        	return false;\r\n");
      out.write("        }\r\n");
      out.write("        if(!board_content){\r\n");
      out.write("        	alert(\"내용을 입력하세요\");\r\n");
      out.write("        	board_content.focus();\r\n");
      out.write("        	return false;\r\n");
      out.write("        }\r\n");
      out.write("        frm.method = 'post';\r\n");
      out.write("        frm.submit();\r\n");
      out.write("      }\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
