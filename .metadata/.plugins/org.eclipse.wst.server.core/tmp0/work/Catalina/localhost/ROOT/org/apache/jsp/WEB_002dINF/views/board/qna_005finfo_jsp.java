/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2022-01-01 13:24:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class qna_005finfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/D:/ProjectWorkspace/EZEN_PROJECT/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_Tea_party_01_01_new_year/WEB-INF/lib/spring-webmvc-5.1.9.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1564703036000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1639357123551L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.1.9.RELEASE.jar", Long.valueOf(1639452641227L));
    _jspx_dependants.put("jar:file:/D:/ProjectWorkspace/EZEN_PROJECT/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_Tea_party_01_01_new_year/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("	");

		String checkLogin = (String) session.getAttribute("checkLogin");
		String mem_id= (String) session.getAttribute("mem_id");
	
      out.write("\r\n");
      out.write("	session\r\n");
      out.write("	");
      out.print(checkLogin);
      out.write("<br>\r\n");
      out.write("	");

		if (checkLogin == "success") {
	
      out.write("\r\n");
      out.write("	<form action=\"boardUpdate.board\" method=\"post\" name=\"frm\">\r\n");
      out.write("		글번호 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("		글제목<input type=\"text\" name=\"board_sub\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_sub}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><br>\r\n");
      out.write("		작성 일자 ");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("<br>\r\n");
      out.write("		작성자 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.mem_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("		글 내용<br>\r\n");
      out.write("		<textarea rows=\"5\" cols=\"50\" style=\"resize: none;\" name=\"board_content\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("		<br> <input type=\"hidden\" name=\"board_no\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"board_no\">\r\n");
      out.write("		<input type=\"button\" value=\"수정\" onclick=\"checkSubmit()\"><br>\r\n");
      out.write("		<input type=\"button\" value=\"QnA 리스트\" onclick=\"location.href='qnaList.board'\">\r\n");
      out.write("		<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mem_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"mem_id\" name=\"mem\">\r\n");
      out.write("	</form>\r\n");
      out.write("	<form action=\"qnaDelete.board\" method=\"post\" name=\"deletefrm\">\r\n");
      out.write("		<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"board_no\">\r\n");
      out.write("		<input type=\"button\" onclick=\"deleteSubmit()\" value=\"삭제\">\r\n");
      out.write("	</form>\r\n");
      out.write("	<br>\r\n");
      out.write("	<h3>댓글</h3>\r\n");
      out.write("	<!-- Comments Form -->\r\n");
      out.write("	<form name=\"comment-form\" action=\"insertComment.board\" method=\"post\"\r\n");
      out.write("		autocomplete=\"off\">\r\n");
      out.write("		<input type=\"hidden\" name=\"board_no\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		<textarea style=\"width: 1100px\" rows=\"3\" cols=\"30\" name=\"reply_content\" placeholder=\"댓글을 입력하세요\" style=\"resize: none;\"></textarea>\r\n");
      out.write("		<button type=\"submit\">Submit</button>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<table class=\"replyTable\" id=\"rtb\">\r\n");
      out.write("		<tbody></tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	");

		} else {
	
      out.write("\r\n");
      out.write("	<a href=\"/login\">로그인 페이지로 이동 </a>\r\n");
      out.write("	");

		}
	
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	function checkSubmit() {\r\n");
      out.write("        var board_sub = document.getElementsByName('board_sub')[0].value;\r\n");
      out.write("        var board_content = document.getElementsByName('board_content')[0].value;\r\n");
      out.write("        if(!board_sub){\r\n");
      out.write("        	alert(\"제목을 입력하세요\");\r\n");
      out.write("        	board_sub.focus();\r\n");
      out.write("        	return false;\r\n");
      out.write("        }\r\n");
      out.write("        if(!board_content){\r\n");
      out.write("        	alert(\"내용을 입력하세요\");\r\n");
      out.write("        	board_content.focus();\r\n");
      out.write("        	return false;\r\n");
      out.write("        }\r\n");
      out.write("        frm.method = 'post';\r\n");
      out.write("        frm.submit();\r\n");
      out.write("      }\r\n");
      out.write("	function deleteSubmit() {\r\n");
      out.write("		 if (confirm(\"정말 삭제하시겠습니까??\") == true){\r\n");
      out.write("		     document.deletefrm.submit();\r\n");
      out.write("		 }else{\r\n");
      out.write("		     return false;\r\n");
      out.write("		 }\r\n");
      out.write("      }\r\n");
      out.write("	\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		   getCommentList();\r\n");
      out.write("		  \r\n");
      out.write("		});\r\n");
      out.write("		 \r\n");
      out.write("		/**\r\n");
      out.write("		 * 댓글 불러오기(Ajax)\r\n");
      out.write("		 */\r\n");
      out.write("\r\n");
      out.write("		function getCommentList() {\r\n");
      out.write("			var board_no = $('#board_no').val();\r\n");
      out.write("			 \r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : 'GET',\r\n");
      out.write("				url : \"/commentList.board\",\r\n");
      out.write("				data : {board_no : board_no},\r\n");
      out.write("				dataType: \"json\", // 전송타입 json으로 변경\r\n");
      out.write("				success : function(data) {\r\n");
      out.write("					var $tableBody = $('#rtb tbody');\r\n");
      out.write("					$tableBody.html('');\r\n");
      out.write("					if(data.length > 0){\r\n");
      out.write("						var mem_id= $('#mem_id').val();\r\n");
      out.write("						for(var i in data){\r\n");
      out.write("							var $tr = $('<tr class=\"rtb_tr\">');\r\n");
      out.write("							var $delBtn  = $('<button id=\"deleteReply\" onclick=\"deleteReply(' + data[i].reply_no+ ')\">삭제</button>');\r\n");
      out.write("							var $rWriter = $('<td>').text(data[i].reply_sub);\r\n");
      out.write("							var $rContent = $('<td>').text(data[i].reply_content);\r\n");
      out.write("							var $rCreateDate = $('<td width=150>').text(data[i].reply_date);\r\n");
      out.write("							$tr.append($rWriter);\r\n");
      out.write("							$tr.append($rContent);\r\n");
      out.write("							$tr.append($rCreateDate);\r\n");
      out.write("							if(mem_id==data[i].reply_sub){\r\n");
      out.write("								$tr.append($delBtn);\r\n");
      out.write("							}\r\n");
      out.write("							$tableBody.append($tr);\r\n");
      out.write("						}\r\n");
      out.write("					}else{\r\n");
      out.write("						var $tr = $('<tr>');\r\n");
      out.write("						var $rContent = $('<td colspan=3>').text('등록된 댓글이 없습니다');\r\n");
      out.write("						$tr.append($rContent);\r\n");
      out.write("						$tableBody.append($tr);\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error : function(result) {\r\n");
      out.write("				},\r\n");
      out.write("				complete : function() {\r\n");
      out.write("\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function deleteReply(reply_no) {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : 'POST',\r\n");
      out.write("				url : \"/deleteReply.board\",\r\n");
      out.write("				data : {reply_no : reply_no},\r\n");
      out.write("				dataType: \"json\", // 전송타입 json으로 변경\r\n");
      out.write("				success : function(data) {\r\n");
      out.write("					if(data.resultCode=='1'){\r\n");
      out.write("						alert('댓글 삭제에 '+data.resultMSG);\r\n");
      out.write("					}else {\r\n");
      out.write("						alert('댓글 삭제에 '+data.resultMSG);\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error : function(result) {\r\n");
      out.write("					console.log('오류는 왜 존재하는 걸까');\r\n");
      out.write("				},\r\n");
      out.write("				complete : function() {\r\n");
      out.write("					getCommentList();\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("			});\r\n");
      out.write("	      }\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/board/qna_info.jsp(25,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_date}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }
}
